{
  "slug": "difflense-privacy-first-git-diff-viewer",
  "title": "difflense — A privacy-first, browser-based git-diff viewer",
  "author": "Niaz Bin Siraj",
  "date": "2025-09-30",
  "category": "Technology",
  "tags": "git,diff,privacy,open-source,javascript,tool,development,code-review",
  "coverPhoto": "static/images/difflense-cover.jpg",
  "photos": [],
  "contents": "<p><strong>Meta description:</strong> difflense is an open-source, client-side diff viewer that turns raw <code>git diff</code> output into readable, shareable views — without uploading your code. Learn why it helps, real use cases, and step-by-step examples (with <code>git diff</code> commands) so you can start using it right away.</p><hr><h2>Intro — the problem I kept hitting</h2><p>When I needed to share code changes with teammates, I kept running into the same friction: tools that required uploading diffs (or entire repos) to a server, clunky displays that made reviews harder, or share links that broke for big diffs. I wanted a simple flow:</p><ul><li>paste or upload a diff → instantly view it nicely in the browser</li><li>keep everything private — no server storage or tracking</li><li>produce a link that I can share with others, but without sending my code to a third party</li></ul><p>So I built <strong>difflense</strong> — a tiny, open-source, browser-first diff viewer that parses and renders diffs locally and can generate shareable URLs entirely in the client.</p><p>Try the demo: <a href=\"https://difflense.nbslabs.dev\" target=\"_blank\">https://difflense.nbslabs.dev</a><br>Repo: <a href=\"https://github.com/nbslabs/difflense\" target=\"_blank\">https://github.com/nbslabs/difflense</a></p><hr><h2>What difflense does (short)</h2><ul><li>Parses Git / unified diffs and renders them with syntax highlighting and line numbers.</li><li>Supports <strong>unified</strong> and <strong>side-by-side</strong> views.</li><li>Generates <strong>shareable links</strong> that embed your diff in the URL — created and decoded in the browser only.</li><li>No backend, no telemetry, no data storage: everything is processed client-side for privacy.</li></ul><hr><h2>Why this matters (usefulness & benefits)</h2><ul><li><strong>Privacy-first:</strong> difflense never uploads the diff to a server; your changes stay in your browser.</li><li><strong>Simple sharing:</strong> teammates get a link that opens the diff in the same UI — handy for quick reviews or demos.</li><li><strong>No setup:</strong> works with diff text you already have from <code>git diff</code>, <code>git show</code>, or any <code>diff -u</code> output.</li><li><strong>Open source & extendable:</strong> fork it, suggest improvements, or add features.</li></ul><hr><h2>Typical use cases</h2><ul><li>Sharing a code review snippet with a contractor without giving repo access.</li><li>Creating a readable diff for a documentation or design review.</li><li>Archiving a snapshot of changes inside a bug/issue tracker by pasting the generated link.</li><li>Teaching or demos: show how a change looks without cloning the repo.</li></ul><hr><h2>How difflense keeps links short and shareable (technical but simple)</h2><p>A challenge with embedding raw diff text in a URL is length — browser URLs have practical limits. difflense uses this approach in the browser:</p><ol><li><strong>Compress</strong> the raw diff text with <strong>Brotli</strong> (a highly efficient compression algorithm).</li><li><strong>Base64-encode</strong> the compressed bytes so they can be included safely in a URL (often with URL-safe tweaks).</li><li>Embed the result as a fragment or query string in the generated link. When someone opens the link, the browser decodes and decompresses it, and difflense renders the diff — all client-side.</li></ol><p>Initially I only used Base64, but long diffs produced extremely long URLs. Brotli compression before encoding reduces size dramatically and makes large diffs shareable without sending data to any server.</p><hr><h2>Step-by-step: using difflense with <code>git diff</code> examples</h2><h3>1) Create a diff from Git</h3><p>Here are common commands to produce diff output that you can paste into difflense.</p><ul><li><strong>Working tree changes (unstaged):</strong></li></ul><pre><code>git diff > my-changes.diff</code></pre><ul><li><strong>Staged changes (index):</strong></li></ul><pre><code>git diff --staged > staged-changes.diff</code></pre><ul><li><strong>Compare two commits:</strong></li></ul><pre><code>git diff &lt;commitA&gt; &lt;commitB&gt; > commits.diff\n# example\ngit diff 1a2b3c4 5d6e7f8 > commits.diff</code></pre><ul><li><strong>Compare two branches (branch vs branch):</strong></li></ul><pre><code>git diff origin/main..feature/my-feature > branch-vs-branch.diff\n# or\ngit diff main..feature/my-feature > branch-vs-branch.diff</code></pre><ul><li><strong>Diff a single file between commits:</strong></li></ul><pre><code>git diff &lt;commitA&gt; &lt;commitB&gt; -- path/to/file > file.diff\n# example\ngit diff HEAD~1 HEAD -- src/app/service.js > service.diff</code></pre><ul><li><strong>Compare file contents from two different commits using the <code>show</code> + <code>diff -u</code> trick:</strong></li></ul><pre><code>git show commitA:path/to/file > /tmp/fileA\ngit show commitB:path/to/file > /tmp/fileB\ndiff -u /tmp/fileA /tmp/fileB > file-diff.diff</code></pre><h3>2) Open difflense</h3><p>Open the demo or your hosted copy:<br><code>https://difflense.nbslabs.dev/index.html</code></p><h3>3) Paste or upload</h3><ul><li>Paste the contents of <code>my-changes.diff</code> (from above) into the input area <strong>or</strong> use the file upload control to choose the <code>.diff</code> file you saved.</li></ul><h3>4) Choose view mode</h3><ul><li>Toggle between <strong>unified</strong> (inline) and <strong>side-by-side</strong> views depending on what your team prefers.</li></ul><h3>5) Inspect & share</h3><ul><li>Review the rendered diff with syntax highlighting and line numbers.</li><li>Click <strong>Generate shareable link</strong> (or similar control). difflense will compress and encode the diff client-side and provide a URL you can copy and send to teammates.</li></ul><h3>6) Open the link</h3><ul><li>Anyone who opens the link will see the same rendered diff in their browser. Because decoding is client-side, the diff text is never uploaded or stored by the site.</li></ul><hr><h2>Best practices</h2><ul><li><strong>Avoid secrets in diffs.</strong> difflense is privacy-friendly, but avoid sharing API keys, credentials, or other sensitive data in any diff.</li><li><strong>Use comments for context.</strong> When you share a link, add a short note (PR context, what's important) — it helps reviewers.</li><li><strong>Star & contribute.</strong> difflense is open source — stars, issues, and PRs help the project grow.</li></ul><hr><h2>How to contribute</h2><ul><li>Star the repo: <a href=\"https://github.com/nbslabs/difflense\" target=\"_blank\">https://github.com/nbslabs/difflense</a></li><li>Report bugs or feature requests via Issues.</li><li>Open a PR if you want to add features like more diff format support, theme options, or performance tweaks.</li></ul><hr><h2>Conclusion — when to reach for difflense</h2><p>If you want a quick, private, and zero-setup way to turn <code>git diff</code> output into a readable and shareable view, difflense is a practical tool. It's ideal for teams who value privacy and speed, or for anyone who needs to share diffs without handing over repository access.</p>"
}